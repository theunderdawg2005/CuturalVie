generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model password_resets {
  id                            Int                             @id @default(autoincrement())
  user_id_id                    Int
  otp                           String                          @unique(map: "password_resets_otp_idx") @db.VarChar
  expires_at                    DateTime                        @db.Timestamptz(3)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  user                          user                            @relation(fields: [user_id_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "password_resets_user_id_id_user_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([updated_at])
  @@index([user_id_id], map: "password_resets_user_id_idx")
}

model puzzle_pieces {
  id                            Int                             @id @default(autoincrement())
  puzzleid_id                   Int?
  piece_index                   Decimal?                        @db.Decimal
  image_piece_id                Int
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  media                         media                           @relation(fields: [image_piece_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "puzzle_pieces_image_piece_id_media_id_fk")
  puzzle_games                  puzzle_games?                   @relation(fields: [puzzleid_id], references: [id], onUpdate: NoAction, map: "puzzle_pieces_puzzleid_id_puzzle_games_id_fk")

  @@index([created_at])
  @@index([image_piece_id], map: "puzzle_pieces_image_piece_idx")
  @@index([puzzleid_id], map: "puzzle_pieces_puzzleid_idx")
  @@index([updated_at])
}

model achievements {
  id                            Int                             @id @default(autoincrement())
  user_id_id                    Int
  name                          String                          @db.VarChar
  description                   String                          @db.VarChar
  stars                         Decimal?                        @default(0) @db.Decimal
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  region_id_id                  Int
  history                       Boolean?                        @default(false)
  intangible_heritage           Boolean?                        @default(false)
  tangible_heritage             Boolean?                        @default(false)
  badge_id                      Int?
  media                         media?                          @relation(fields: [badge_id], references: [id], onUpdate: NoAction, map: "achievements_badge_id_media_id_fk")
  regions                       regions                         @relation(fields: [region_id_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "achievements_region_id_id_regions_id_fk")
  user                          user                            @relation(fields: [user_id_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "achievements_user_id_id_user_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]
  play_process                  play_process[]

  @@index([badge_id], map: "achievements_badge_idx")
  @@index([created_at])
  @@index([region_id_id], map: "achievements_region_id_idx")
  @@index([updated_at])
  @@index([user_id_id], map: "achievements_user_id_idx")
}

model after_question_info {
  id                            Int                             @id @default(autoincrement())
  topic_name                    String                          @db.VarChar
  puzzle_game_id_id             Int?
  quiz_game_question_id_id      Int?
  treasure_card_id_id           Int?
  word_game_id_id               Int?
  game_type_id_id               Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  game_types                    game_types?                     @relation(fields: [game_type_id_id], references: [id], onUpdate: NoAction, map: "after_question_info_game_type_id_id_game_types_id_fk")
  puzzle_games                  puzzle_games?                   @relation(fields: [puzzle_game_id_id], references: [id], onUpdate: NoAction, map: "after_question_info_puzzle_game_id_id_puzzle_games_id_fk")
  quiz_game_questions           quiz_game_questions?            @relation(fields: [quiz_game_question_id_id], references: [id], onUpdate: NoAction, map: "after_question_info_quiz_game_question_id_id_quiz_game_question")
  treasure_cards                treasure_cards?                 @relation(fields: [treasure_card_id_id], references: [id], onUpdate: NoAction, map: "after_question_info_treasure_card_id_id_treasure_cards_id_fk")
  word_games                    word_games?                     @relation(fields: [word_game_id_id], references: [id], onUpdate: NoAction, map: "after_question_info_word_game_id_id_word_games_id_fk")
  information_slides            information_slides[]
  media_links                   media_links[]
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([game_type_id_id], map: "after_question_info_game_type_id_idx")
  @@index([puzzle_game_id_id], map: "after_question_info_puzzle_game_id_idx")
  @@index([quiz_game_question_id_id], map: "after_question_info_quiz_game_question_id_idx")
  @@index([treasure_card_id_id], map: "after_question_info_treasure_card_id_idx")
  @@index([updated_at])
  @@index([word_game_id_id], map: "after_question_info_word_game_id_idx")
}

model comment_reactions {
  id                            Int                                  @id @default(autoincrement())
  user_id                       Int
  comment_id                    Int
  reaction_type                 enum_comment_reactions_reaction_type
  created_at                    DateTime                             @default(now()) @db.Timestamptz(3)
  updated_at                    DateTime                             @default(now()) @db.Timestamptz(3)
  comments                      comments                             @relation(fields: [comment_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "comment_reactions_comment_id_comments_id_fk")
  user                          user                                 @relation(fields: [user_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "comment_reactions_user_id_user_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([comment_id], map: "comment_reactions_comment_idx")
  @@index([updated_at])
  @@index([user_id], map: "comment_reactions_user_idx")
}

model comments {
  id                            Int                             @id @default(autoincrement())
  post_id_id                    Int?
  user_id_id                    Int?
  content                       String?                         @db.VarChar
  likes                         Decimal?                        @default(0) @db.Decimal
  dislikes                      Decimal?                        @default(0) @db.Decimal
  parent_id_id                  Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  comment_reactions             comment_reactions[]
  comments                      comments?                       @relation("commentsTocomments", fields: [parent_id_id], references: [id], onUpdate: NoAction, map: "comments_parent_id_id_comments_id_fk")
  other_comments                comments[]                      @relation("commentsTocomments")
  posts                         posts?                          @relation(fields: [post_id_id], references: [id], onUpdate: NoAction, map: "comments_post_id_id_posts_id_fk")
  user                          user?                           @relation(fields: [user_id_id], references: [id], onUpdate: NoAction, map: "comments_user_id_id_user_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([parent_id_id], map: "comments_parent_id_idx")
  @@index([post_id_id], map: "comments_post_id_idx")
  @@index([updated_at])
  @@index([user_id_id], map: "comments_user_id_idx")
}

model email_verifications {
  id                            Int                             @id @default(autoincrement())
  user_id_id                    Int?
  otp                           String?                         @db.VarChar
  expires_at                    DateTime?                       @db.Timestamptz(3)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  user                          user?                           @relation(fields: [user_id_id], references: [id], onUpdate: NoAction, map: "email_verifications_user_id_id_user_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([updated_at])
  @@index([user_id_id], map: "email_verifications_user_id_idx")
}

model game_types {
  id                            Int                             @id @default(autoincrement())
  code                          enum_game_types_code            @unique(map: "game_types_code_idx")
  name                          String                          @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  puzzle_games                  puzzle_games[]
  quiz_games                    quiz_games[]
  treasure_games                treasure_games[]
  word_games                    word_games[]

  @@index([created_at])
  @@index([updated_at])
}

model information_slides {
  id                            Int                             @id @default(autoincrement())
  heading                       String?                         @db.VarChar
  after_question_info_id_id     Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info?            @relation(fields: [after_question_info_id_id], references: [id], onUpdate: NoAction, map: "information_slides_after_question_info_id_id_after_question_inf")
  information_slides_content    information_slides_content[]
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([after_question_info_id_id], map: "information_slides_after_question_info_id_idx")
  @@index([created_at])
  @@index([updated_at])
}

model information_slides_content {
  order              Int                @map("_order")
  parent_id          Int                @map("_parent_id")
  id                 String             @id @db.VarChar
  paragraph          String?            @db.VarChar
  information_slides information_slides @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "information_slides_content_parent_id_fk")

  @@index([order], map: "information_slides_content_order_idx")
  @@index([parent_id], map: "information_slides_content_parent_id_idx")
}

model knowledge_post {
  id                            Int                             @id @default(autoincrement())
  subject                       String?                         @db.VarChar
  title                         String?                         @db.VarChar
  image_id                      Int?
  content                       String?                         @db.VarChar
  post_type                     enum_knowledge_post_post_type
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  media                         media?                          @relation(fields: [image_id], references: [id], onUpdate: NoAction, map: "knowledge_post_image_id_media_id_fk")
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([image_id], map: "knowledge_post_image_idx")
  @@index([updated_at])
}

model media {
  id                            Int                             @id @default(autoincrement())
  alt                           String                          @db.VarChar
  key                           String?                         @map("_key") @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  url                           String?                         @db.VarChar
  thumbnail_u_r_l               String?                         @db.VarChar
  filename                      String?                         @unique(map: "media_filename_idx") @db.VarChar
  mime_type                     String?                         @db.VarChar
  filesize                      Decimal?                        @db.Decimal
  width                         Decimal?                        @db.Decimal
  height                        Decimal?                        @db.Decimal
  focal_x                       Decimal?                        @db.Decimal
  focal_y                       Decimal?                        @db.Decimal
  achievements                  achievements[]
  knowledge_post                knowledge_post[]
  media_links_rels              media_links_rels[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  posts                         posts[]
  puzzle_games                  puzzle_games[]
  puzzle_pieces                 puzzle_pieces[]
  treasure_cards                treasure_cards[]

  @@index([created_at])
  @@index([updated_at])
}

model media_links {
  id                            Int                             @id @default(autoincrement())
  alt                           String?                         @db.VarChar
  after_question_info_id_id     Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  youtube_link                  String?                         @db.VarChar
  after_question_info           after_question_info?            @relation(fields: [after_question_info_id_id], references: [id], onUpdate: NoAction, map: "media_links_after_question_info_id_id_after_question_info_id_fk")
  media_links_rels              media_links_rels[]
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([after_question_info_id_id], map: "media_links_after_question_info_id_idx")
  @@index([created_at])
  @@index([updated_at])
}

model media_links_rels {
  id          Int         @id @default(autoincrement())
  order       Int?
  parent_id   Int
  path        String      @db.VarChar
  media_id    Int?
  media       media?      @relation(fields: [media_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "media_links_rels_media_fk")
  media_links media_links @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "media_links_rels_parent_fk")

  @@index([media_id])
  @@index([order])
  @@index([parent_id], map: "media_links_rels_parent_idx")
  @@index([path])
}

model payload_locked_documents {
  id                            Int                             @id @default(autoincrement())
  global_slug                   String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]

  @@index([created_at])
  @@index([global_slug])
  @@index([updated_at])
}

model payload_locked_documents_rels {
  id                       Int                      @id @default(autoincrement())
  order                    Int?
  parent_id                Int
  path                     String                   @db.VarChar
  users_id                 Int?
  media_id                 Int?
  achievements_id          Int?
  after_question_info_id   Int?
  comments_id              Int?
  email_verifications_id   Int?
  information_slides_id    Int?
  media_links_id           Int?
  password_resets_id       Int?
  posts_id                 Int?
  puzzle_games_id          Int?
  puzzle_pieces_id         Int?
  quiz_games_id            Int?
  quiz_game_questions_id   Int?
  refresh_tokens_id        Int?
  regions_id               Int?
  tags_id                  Int?
  treasure_cards_id        Int?
  treasure_games_id        Int?
  word_games_id            Int?
  comment_reactions_id     Int?
  game_types_id            Int?
  user_id                  Int?
  play_process_id          Int?
  knowledge_post_id        Int?
  achievements             achievements?            @relation(fields: [achievements_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_achievements_fk")
  after_question_info      after_question_info?     @relation(fields: [after_question_info_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_after_question_info_fk")
  comment_reactions        comment_reactions?       @relation(fields: [comment_reactions_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_comment_reactions_fk")
  comments                 comments?                @relation(fields: [comments_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_comments_fk")
  email_verifications      email_verifications?     @relation(fields: [email_verifications_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_email_verifications_fk")
  game_types               game_types?              @relation(fields: [game_types_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_game_types_fk")
  information_slides       information_slides?      @relation(fields: [information_slides_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_information_slides_fk")
  knowledge_post           knowledge_post?          @relation(fields: [knowledge_post_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_knowledge_post_fk")
  media                    media?                   @relation(fields: [media_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_media_fk")
  media_links              media_links?             @relation(fields: [media_links_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_media_links_fk")
  payload_locked_documents payload_locked_documents @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_parent_fk")
  password_resets          password_resets?         @relation(fields: [password_resets_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_password_resets_fk")
  play_process             play_process?            @relation(fields: [play_process_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_play_process_fk")
  posts                    posts?                   @relation(fields: [posts_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_posts_fk")
  puzzle_games             puzzle_games?            @relation(fields: [puzzle_games_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_puzzle_games_fk")
  puzzle_pieces            puzzle_pieces?           @relation(fields: [puzzle_pieces_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_puzzle_pieces_fk")
  quiz_game_questions      quiz_game_questions?     @relation(fields: [quiz_game_questions_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_quiz_game_questions_fk")
  quiz_games               quiz_games?              @relation(fields: [quiz_games_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_quiz_games_fk")
  refresh_tokens           refresh_tokens?          @relation(fields: [refresh_tokens_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_refresh_tokens_fk")
  regions                  regions?                 @relation(fields: [regions_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_regions_fk")
  tags                     tags?                    @relation(fields: [tags_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_tags_fk")
  treasure_cards           treasure_cards?          @relation(fields: [treasure_cards_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_treasure_cards_fk")
  treasure_games           treasure_games?          @relation(fields: [treasure_games_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_treasure_games_fk")
  user                     user?                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_user_fk")
  users                    users?                   @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_users_fk")
  word_games               word_games?              @relation(fields: [word_games_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_locked_documents_rels_word_games_fk")

  @@index([achievements_id])
  @@index([after_question_info_id])
  @@index([comment_reactions_id])
  @@index([comments_id])
  @@index([email_verifications_id])
  @@index([game_types_id])
  @@index([information_slides_id])
  @@index([knowledge_post_id])
  @@index([media_id])
  @@index([media_links_id])
  @@index([order])
  @@index([parent_id], map: "payload_locked_documents_rels_parent_idx")
  @@index([password_resets_id])
  @@index([path])
  @@index([play_process_id])
  @@index([posts_id])
  @@index([puzzle_games_id])
  @@index([puzzle_pieces_id])
  @@index([quiz_game_questions_id])
  @@index([quiz_games_id])
  @@index([refresh_tokens_id])
  @@index([regions_id])
  @@index([tags_id])
  @@index([treasure_cards_id])
  @@index([treasure_games_id])
  @@index([user_id])
  @@index([users_id])
  @@index([word_games_id])
}

model payload_migrations {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar
  batch      Decimal? @db.Decimal
  updated_at DateTime @default(now()) @db.Timestamptz(3)
  created_at DateTime @default(now()) @db.Timestamptz(3)

  @@index([created_at])
  @@index([updated_at])
}

model payload_preferences {
  id                       Int                        @id @default(autoincrement())
  key                      String?                    @db.VarChar
  value                    Json?
  updated_at               DateTime                   @default(now()) @db.Timestamptz(3)
  created_at               DateTime                   @default(now()) @db.Timestamptz(3)
  payload_preferences_rels payload_preferences_rels[]

  @@index([created_at])
  @@index([key])
  @@index([updated_at])
}

model payload_preferences_rels {
  id                  Int                 @id @default(autoincrement())
  order               Int?
  parent_id           Int
  path                String              @db.VarChar
  users_id            Int?
  user_id             Int?
  payload_preferences payload_preferences @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_preferences_rels_parent_fk")
  user                user?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_preferences_rels_user_fk")
  users               users?              @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "payload_preferences_rels_users_fk")

  @@index([order])
  @@index([parent_id], map: "payload_preferences_rels_parent_idx")
  @@index([path])
  @@index([user_id])
  @@index([users_id])
}

model play_process {
  id                            Int                             @id @default(autoincrement())
  achievement_id_id             Int?
  user_id_id                    Int?
  history                       Boolean?                        @default(false)
  intangible_heritage           Boolean?                        @default(false)
  tangible_heritage             Boolean?                        @default(false)
  stars                         Decimal?                        @default(0) @db.Decimal
  badge                         String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  achievements                  achievements?                   @relation(fields: [achievement_id_id], references: [id], onUpdate: NoAction, map: "play_process_achievement_id_id_achievements_id_fk")
  user                          user?                           @relation(fields: [user_id_id], references: [id], onUpdate: NoAction, map: "play_process_user_id_id_user_id_fk")

  @@index([achievement_id_id], map: "play_process_achievement_id_idx")
  @@index([created_at])
  @@index([updated_at])
  @@index([user_id_id], map: "play_process_user_id_idx")
}

model posts {
  id                            Int                             @id @default(autoincrement())
  user_id_id                    Int?
  title                         String?                         @db.VarChar
  question                      String?                         @db.VarChar
  image_id                      Int?
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  comments                      comments[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  media                         media?                          @relation(fields: [image_id], references: [id], onUpdate: NoAction, map: "posts_image_id_media_id_fk")
  user                          user?                           @relation(fields: [user_id_id], references: [id], onUpdate: NoAction, map: "posts_user_id_id_user_id_fk")
  posts_rels                    posts_rels[]

  @@index([created_at])
  @@index([image_id], map: "posts_image_idx")
  @@index([updated_at])
  @@index([user_id_id], map: "posts_user_id_idx")
}

model posts_rels {
  id        Int    @id @default(autoincrement())
  order     Int?
  parent_id Int
  path      String @db.VarChar
  tags_id   Int?
  user_id   Int?
  posts     posts  @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_rels_parent_fk")
  tags      tags?  @relation(fields: [tags_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_rels_tags_fk")
  user      user?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "posts_rels_user_fk")

  @@index([order])
  @@index([parent_id], map: "posts_rels_parent_idx")
  @@index([path])
  @@index([tags_id])
  @@index([user_id])
}

model puzzle_games {
  id                            Int                             @id @default(autoincrement())
  regionid_id                   Int?
  gametype_id                   Int?
  hint                          String?                         @db.VarChar
  image_id                      Int
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  game_types                    game_types?                     @relation(fields: [gametype_id], references: [id], onUpdate: NoAction, map: "puzzle_games_gametype_id_game_types_id_fk")
  media                         media                           @relation(fields: [image_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "puzzle_games_image_id_media_id_fk")
  regions                       regions?                        @relation(fields: [regionid_id], references: [id], onUpdate: NoAction, map: "puzzle_games_regionid_id_regions_id_fk")
  puzzle_games_answer           puzzle_games_answer[]
  puzzle_pieces                 puzzle_pieces[]

  @@index([created_at])
  @@index([gametype_id], map: "puzzle_games_gametype_idx")
  @@index([image_id], map: "puzzle_games_image_idx")
  @@index([regionid_id], map: "puzzle_games_regionid_idx")
  @@index([updated_at])
}

model puzzle_games_answer {
  order        Int          @map("_order")
  parent_id    Int          @map("_parent_id")
  id           String       @id @db.VarChar
  index        Decimal?     @db.Decimal
  puzzle_games puzzle_games @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "puzzle_games_answer_parent_id_fk")

  @@index([order], map: "puzzle_games_answer_order_idx")
  @@index([parent_id], map: "puzzle_games_answer_parent_id_idx")
}

model quiz_game_questions {
  id                            Int                             @id @default(autoincrement())
  quiz_game_id_id               Int?
  question                      String?                         @db.VarChar
  option_a                      String?                         @db.VarChar
  option_b                      String?                         @db.VarChar
  option_c                      String?                         @db.VarChar
  option_d                      String?                         @db.VarChar
  audio_url                     String?                         @db.VarChar
  correct_answer                String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  quiz_games                    quiz_games?                     @relation(fields: [quiz_game_id_id], references: [id], onUpdate: NoAction, map: "quiz_game_questions_quiz_game_id_id_quiz_games_id_fk")

  @@index([created_at])
  @@index([quiz_game_id_id], map: "quiz_game_questions_quiz_game_id_idx")
  @@index([updated_at])
}

model quiz_games {
  id                            Int                             @id @default(autoincrement())
  regionid_id                   Int?
  gametype_id                   Int?
  title                         String?                         @db.VarChar
  description                   String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  quiz_game_questions           quiz_game_questions[]
  game_types                    game_types?                     @relation(fields: [gametype_id], references: [id], onUpdate: NoAction, map: "quiz_games_gametype_id_game_types_id_fk")
  regions                       regions?                        @relation(fields: [regionid_id], references: [id], onUpdate: NoAction, map: "quiz_games_regionid_id_regions_id_fk")

  @@index([created_at])
  @@index([gametype_id], map: "quiz_games_gametype_idx")
  @@index([regionid_id], map: "quiz_games_regionid_idx")
  @@index([updated_at])
}

model refresh_tokens {
  id                            Int                             @id @default(autoincrement())
  user_id_id                    Int
  hashed_token                  String                          @unique(map: "refresh_tokens_hashed_token_idx") @db.VarChar
  revoked                       Boolean?                        @default(false)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  expire_at                     DateTime                        @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  user                          user                            @relation(fields: [user_id_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "refresh_tokens_user_id_id_user_id_fk")

  @@index([user_id_id], map: "refresh_tokens_user_id_idx")
}

model regions {
  id                            Int                             @id @default(autoincrement())
  region_name                   String                          @db.VarChar
  region_code                   String                          @unique(map: "regions_region_code_idx") @db.VarChar
  media_url                     String?                         @db.VarChar
  description                   String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  achievements                  achievements[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  puzzle_games                  puzzle_games[]
  quiz_games                    quiz_games[]
  treasure_games                treasure_games[]
  word_games                    word_games[]

  @@index([created_at])
  @@index([updated_at])
}

model tags {
  id                            Int                             @id @default(autoincrement())
  name                          String                          @unique(map: "tags_name_idx") @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  posts_rels                    posts_rels[]

  @@index([created_at])
  @@index([updated_at])
}

model treasure_cards {
  id                            Int                             @id @default(autoincrement())
  treasure_game_id              Int
  type                          enum_treasure_cards_type
  value                         String?                         @db.VarChar
  image_id                      Int?
  match_group                   Decimal                         @db.Decimal
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  media                         media?                          @relation(fields: [image_id], references: [id], onUpdate: NoAction, map: "treasure_cards_image_id_media_id_fk")
  treasure_games                treasure_games                  @relation(fields: [treasure_game_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "treasure_cards_treasure_game_id_treasure_games_id_fk")

  @@index([created_at])
  @@index([image_id], map: "treasure_cards_image_idx")
  @@index([treasure_game_id], map: "treasure_cards_treasure_game_idx")
  @@index([updated_at])
}

model treasure_games {
  id                            Int                             @id @default(autoincrement())
  region_id                     Int?
  gametype_id                   Int?
  title                         String?                         @db.VarChar
  description                   String?                         @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  treasure_cards                treasure_cards[]
  game_types                    game_types?                     @relation(fields: [gametype_id], references: [id], onUpdate: NoAction, map: "treasure_games_gametype_id_game_types_id_fk")
  regions                       regions?                        @relation(fields: [region_id], references: [id], onUpdate: NoAction, map: "treasure_games_region_id_regions_id_fk")

  @@index([created_at])
  @@index([gametype_id], map: "treasure_games_gametype_idx")
  @@index([region_id], map: "treasure_games_region_idx")
  @@index([updated_at])
}

model user {
  id                            Int                             @id @default(autoincrement())
  full_name                     String                          @db.VarChar
  username                      String?                         @unique(map: "user_username_idx") @db.VarChar
  password                      String                          @db.VarChar
  avatar_url                    String?                         @default("https://example.com/default-avatar.png") @db.VarChar
  date_of_birth                 DateTime?                       @db.Timestamptz(3)
  location                      String?                         @db.VarChar
  gender                        enum_user_gender?
  is_verified                   Boolean?                        @default(false)
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  email                         String                          @unique(map: "user_email_idx") @db.VarChar
  reset_password_token          String?                         @db.VarChar
  reset_password_expiration     DateTime?                       @db.Timestamptz(3)
  salt                          String?                         @db.VarChar
  hash                          String?                         @db.VarChar
  login_attempts                Decimal?                        @default(0) @db.Decimal
  lock_until                    DateTime?                       @db.Timestamptz(3)
  achievements                  achievements[]
  comment_reactions             comment_reactions[]
  comments                      comments[]
  email_verifications           email_verifications[]
  password_resets               password_resets[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  payload_preferences_rels      payload_preferences_rels[]
  play_process                  play_process[]
  posts                         posts[]
  posts_rels                    posts_rels[]
  refresh_tokens                refresh_tokens[]

  @@index([created_at])
  @@index([updated_at])
}

model users {
  id                            Int                             @id @default(autoincrement())
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  email                         String                          @unique(map: "users_email_idx") @db.VarChar
  reset_password_token          String?                         @db.VarChar
  reset_password_expiration     DateTime?                       @db.Timestamptz(3)
  salt                          String?                         @db.VarChar
  hash                          String?                         @db.VarChar
  login_attempts                Decimal?                        @default(0) @db.Decimal
  lock_until                    DateTime?                       @db.Timestamptz(3)
  payload_locked_documents_rels payload_locked_documents_rels[]
  payload_preferences_rels      payload_preferences_rels[]

  @@index([created_at])
  @@index([updated_at])
}

model word_games {
  id                            Int                             @id @default(autoincrement())
  region_id                     Int?
  gametype_id                   Int?
  question                      String                          @db.VarChar
  hint                          String?                         @db.VarChar
  answer                        String                          @db.VarChar
  updated_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  created_at                    DateTime                        @default(now()) @db.Timestamptz(3)
  after_question_info           after_question_info[]
  payload_locked_documents_rels payload_locked_documents_rels[]
  game_types                    game_types?                     @relation(fields: [gametype_id], references: [id], onUpdate: NoAction, map: "word_games_gametype_id_game_types_id_fk")
  regions                       regions?                        @relation(fields: [region_id], references: [id], onUpdate: NoAction, map: "word_games_region_id_regions_id_fk")
  word_games_correct_letters    word_games_correct_letters[]
  word_games_letters            word_games_letters[]

  @@index([created_at])
  @@index([gametype_id], map: "word_games_gametype_idx")
  @@index([region_id], map: "word_games_region_idx")
  @@index([updated_at])
}

model word_games_correct_letters {
  order      Int        @map("_order")
  parent_id  Int        @map("_parent_id")
  id         String     @id @db.VarChar
  letter     String?    @db.VarChar
  word_games word_games @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "word_games_correct_letters_parent_id_fk")

  @@index([order], map: "word_games_correct_letters_order_idx")
  @@index([parent_id], map: "word_games_correct_letters_parent_id_idx")
}

model word_games_letters {
  order      Int        @map("_order")
  parent_id  Int        @map("_parent_id")
  id         String     @id @db.VarChar
  letter     String?    @db.VarChar
  word_games word_games @relation(fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "word_games_letters_parent_id_fk")

  @@index([order], map: "word_games_letters_order_idx")
  @@index([parent_id], map: "word_games_letters_parent_id_idx")
}

enum enum_comment_reactions_reaction_type {
  Like
  Dislike
}

enum enum_game_types_code {
  puzzle
  quiz
  word
  treasure
}

enum enum_knowledge_post_post_type {
  region
  province
  journey
  category
}

enum enum_treasure_cards_type {
  text
  image
}

enum enum_user_gender {
  Male
  Female
  Other
}
